#include "lol.h"

int main(void)
{
	t_env	env;

	env.mlxp = mlx_init();
	env.mlxw = mlx_new_window(env.mlxp, W_W, W_H, "lapin");
	env.mlxi = (t_image *)mlx_new_image(env.mlxp, W_W, W_H);
	env.lolx = 0;
	env.loly = 0;
	env.sfr.x = -1;
	env.sfr.y = 1;
	env.sfr.z = -50;
	env.sfr.r = 10;
	ft_memset(env.push, 0, 270);
	mlx_hook(env.mlxw, 2, 1, key_on, &env);
	mlx_key_hook(env.mlxw, key_off, &env);
	mlx_loop_hook(env.mlxp, loop, &env);
	mlx_loop(env.mlxp);
	return(0);
}

int		loop(void *venv)
{
	t_env	*env;

	env = (t_env *)venv;
	env->push[UP] ? env->sfr.y++ : 0;
	env->push[DN] ? env->sfr.y-- : 0;
	env->push[LT] ? env->sfr.x++ : 0;
	env->push[RT] ? env->sfr.x -- : 0;
	env->push[N1] ? env->sfr.z++ : 0;
	env->push[N2] ? env->sfr.z-- : 0;
	env->push[N4] ? env->sfr.r++ : 0;
	env->push[N5] ? env->sfr.r-- : 0;
	ft_memset(env->mlxi->buffer, 0, env->mlxi->width * env->mlxi->height * 4);
	graf(env);
	mlx_put_image_to_window(env->mlxp, env->mlxw, env->mlxi, 0, 0);
	return(0);
}

int		key_on(int key, void *venv)
{
	t_env	*env;

	env = (t_env *)venv;
	env->push[key] = 1;
	key == ESC ? exit(0): 0; 
	return(0);
}

int		key_off(int key, void *venv)
{
	t_env	*env;

	env = (t_env *)venv;
	env->push[key] = 0;
	return(0);
}
void	put_pixel_to_img(t_env *env, unsigned int color, int x, int y)
{
        if (x < env->mlxi->width && y < env->mlxi->height)
                ((unsigned int *)(env->mlxi->buffer))[x + y *
                env->mlxi->width] = color;
}

void	graf(t_env *env)
{
	int		x;
	int		y;
	int		f_color;
	float	delta;
	t_ray	ray;

	y = 0;
	while (y < W_H)
	{
		f_color = 0;
		ray.x = x - (W_W / 2.0f);
		ray.y = y - (W_H / 2.0f);
		ray.z = 600;
		long long c = env->sfr.x * env->sfr.x + env->sfr.y * env->sfr.y + env->sfr.z * env->sfr.z - env->sfr.r * env->sfr.r;
		long long a = ray.x * ray.x + ray.y * ray.y + ray.z * ray.z;
		long long b = -2 * (ray.x * env->sfr.x + ray.y * env->sfr.y + ray.z * env->sfr.z);
		delta = b * b - 4 * a * c;
		if (delta >= 0)// ????
		{
			double x1 = (-(double)b + sqrt(delta)) / (double)(2 * a);
			double zz = ray.z * x1 + (double)env->sfr.z;
			f_color = 0xff + 100 * (zz + 90);
			f_color < 0 ? f_color = 0 : 0;
			f_color > 255 ? f_color = 255 : 0;
		printf("color = %lf\n",zz);
		}
		//x == 5 && y == 5 ? printf("delta = %f\n",delta) : 0;
		put_pixel_to_img(env, f_color, x, y);
		x++;
		if (x == W_W)
		{
			x = 0;
			y++;
		}
	}
	(void)env;
	return;
}